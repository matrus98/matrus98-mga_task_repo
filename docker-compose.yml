version: '3'
services:
  db:
    restart: always
    image: postgres
    container_name: ${DATABASE_CONTAINER_NAME}
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '${POSTGRES_EXTERNAL_PORT}:${POSTGRES_INTERNAL_PORT_IN_CONTAINER}'
    volumes:
      - ${POSTGRES_DATA_VOLUME}:/var/lib/postgresql/data/
  my_web_app:
    depends_on:
      - db
    build:
      context: ./
    restart: always
    environment:
      - DATABASE_CONTAINER_NAME=${DATABASE_CONTAINER_NAME}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_EXTERNAL_PORT=${POSTGRES_EXTERNAL_PORT}
      - MY_WEB_APP_INTERNAL_PORT_IN_CONTAINER=${MY_WEB_APP_INTERNAL_PORT_IN_CONTAINER}
    ports:
      - "${MY_WEB_APP_EXTERNAL_PORT}:${MY_WEB_APP_INTERNAL_PORT_IN_CONTAINER}" # External:Container
    # sleep command occurs here due to start up of database
    # if server runs before its configuration, the container with app run fails
    command: gunicorn -c gunicorn.conf -w ${GUNICORN_WORKERS} mga_task.wsgi
